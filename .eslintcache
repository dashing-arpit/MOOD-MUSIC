[{"/home/arpit/Desktop/final/mood/src/index.js":"1","/home/arpit/Desktop/final/mood/src/App.js":"2","/home/arpit/Desktop/final/mood/src/utils/Reducer.js":"3","/home/arpit/Desktop/final/mood/src/utils/StateProvider.jsx":"4","/home/arpit/Desktop/final/mood/src/utils/Constants.js":"5","/home/arpit/Desktop/final/mood/src/components/Login.jsx":"6","/home/arpit/Desktop/final/mood/src/components/Spotify.jsx":"7","/home/arpit/Desktop/final/mood/src/components/Navbar.jsx":"8","/home/arpit/Desktop/final/mood/src/components/Sidebar.jsx":"9","/home/arpit/Desktop/final/mood/src/components/Footer.jsx":"10","/home/arpit/Desktop/final/mood/src/components/Body.jsx":"11","/home/arpit/Desktop/final/mood/src/components/CurrentTrack.jsx":"12","/home/arpit/Desktop/final/mood/src/components/Playlists.jsx":"13","/home/arpit/Desktop/final/mood/src/components/PlayerControls.jsx":"14","/home/arpit/Desktop/final/mood/src/components/Volume.jsx":"15","/home/arpit/Desktop/final/mood/src/components/MoodDetection.jsx":"16"},{"size":504,"mtime":1681925901852,"results":"17","hashOfConfig":"18"},{"size":665,"mtime":1681510728756,"results":"19","hashOfConfig":"18"},{"size":1216,"mtime":1682133736732,"results":"20","hashOfConfig":"18"},{"size":385,"mtime":1681669650692,"results":"21","hashOfConfig":"18"},{"size":272,"mtime":1681420257268,"results":"22","hashOfConfig":"18"},{"size":1517,"mtime":1682032768972,"results":"23","hashOfConfig":"18"},{"size":2852,"mtime":1682134750908,"results":"24","hashOfConfig":"18"},{"size":1662,"mtime":1681926300824,"results":"25","hashOfConfig":"18"},{"size":4692,"mtime":1682032922448,"results":"26","hashOfConfig":"18"},{"size":590,"mtime":1682135760676,"results":"27","hashOfConfig":"18"},{"size":6984,"mtime":1681583236884,"results":"28","hashOfConfig":"18"},{"size":2017,"mtime":1681583249660,"results":"29","hashOfConfig":"18"},{"size":1836,"mtime":1682133152020,"results":"30","hashOfConfig":"18"},{"size":2914,"mtime":1681583533588,"results":"31","hashOfConfig":"18"},{"size":861,"mtime":1682135704552,"results":"32","hashOfConfig":"18"},{"size":6944,"mtime":1682135924108,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"gt2yxk",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/home/arpit/Desktop/final/mood/src/index.js",["71","72"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport { StateProvider } from \"./utils/StateProvider\";\nimport reducer, { initialState } from \"./utils/Reducer\";\nimport MoodDetection from \"./components/MoodDetection\";\nimport axios from 'axios';\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App/>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["73","74"],"/home/arpit/Desktop/final/mood/src/App.js",[],"/home/arpit/Desktop/final/mood/src/utils/Reducer.js",[],"/home/arpit/Desktop/final/mood/src/utils/StateProvider.jsx",[],"/home/arpit/Desktop/final/mood/src/utils/Constants.js",[],"/home/arpit/Desktop/final/mood/src/components/Login.jsx",["75"],"import React from 'react';\nimport styled from \"styled-components\";\nimport \"./button.css\"\nexport default function Login() {\n    const handleClick = async () => {\n      const client_id = \"8010c2b0298d46729fcc4f1a2c577fe7\";\n      const redirect_uri = \"http://localhost:3000/\";\n      const api_uri = \"https://accounts.spotify.com/authorize\";\n      const scope = [\n      \"user-read-private\",\n      \"user-read-email\",\n      \"user-modify-playback-state\",\n      \"user-read-playback-state\",\n      \"user-read-currently-playing\",\n      \"user-read-recently-played\",\n      \"user-top-read\",\n      ];\n      window.location.href = `${api_uri}?client_id=${client_id}&redirect_uri=${redirect_uri}&scope=${scope.join(\n        \" \"\n      )}&response_type=token&show_dialog=true`;\n    };\n    return (\n      <Container>\n        <img\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQehlC-KLBZSPimVhrJN99S9MckKTkRNJXTXA&usqp=CAU\"\n          alt=\"spotify\"\n        />\n        <button class=\"button-85\" role=\"button\" onClick={handleClick} >Connect Mood-Music</button>\n      </Container>\n    );\n  }\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 100vh;\n  width: 100vw;\n  background-color:black ;\n  gap: 5rem;\n  img {\n    height: 30vh;\n  }\n  button {\n    padding: 1rem 1rem;\n    border-radius: 40rem;\n    background-color: black;\n    bordor-color: white;\n    color: white;\n    border: none;\n    font-size: 1.7rem;\n    cursor: pointer;\n  }`;\n","/home/arpit/Desktop/final/mood/src/components/Spotify.jsx",[],"/home/arpit/Desktop/final/mood/src/components/Navbar.jsx",["76"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStateProvider } from \"../utils/StateProvider\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { CgProfile } from \"react-icons/cg\";\nimport MoodDetection from \"./MoodDetection\";\nexport default function Navbar({ navBackground }) {\n  const [{ userInfo }] = useStateProvider();\n  return (\n    <Container navBackground={navBackground}>\n      <div className=\"search__bar\">\n        <MoodDetection/>\n      </div>\n      <div className=\"avatar\">\n        <a href={userInfo?.userUrl}>\n          <CgProfile />\n          <span>{userInfo?.name}</span>\n        </a>\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2rem;\n  height: 15vh;\n  position: sticky;\n  top: 0;\n  transition: 0.3s ease-in-out;\n  background-color: ${({ navBackground }) =>\n    navBackground ? \"rgba(0,0,0,0.7)\" : \"none\"};\n  .search__bar {\n    padding: 0.4rem 1rem;\n    border-radius: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin-top : 0rem;\n  }\n  .avatar {\n    background-color: black;\n    padding: 0.3rem 0.4rem;\n    padding-right: 1rem;\n    border-radius: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    a {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 0.5rem;\n      text-decoration: none;\n      color: white;\n      font-weight: bold;\n      svg {\n        font-size: 1.3rem;\n        background-color: #282828;\n        padding: 0.2rem;\n        border-radius: 1rem;\n        color: #c7c5c5;\n      }\n    }\n  }\n`;","/home/arpit/Desktop/final/mood/src/components/Sidebar.jsx",[],"/home/arpit/Desktop/final/mood/src/components/Footer.jsx",[],"/home/arpit/Desktop/final/mood/src/components/Body.jsx",[],"/home/arpit/Desktop/final/mood/src/components/CurrentTrack.jsx",[],"/home/arpit/Desktop/final/mood/src/components/Playlists.jsx",[],"/home/arpit/Desktop/final/mood/src/components/PlayerControls.jsx",[],"/home/arpit/Desktop/final/mood/src/components/Volume.jsx",[],"/home/arpit/Desktop/final/mood/src/components/MoodDetection.jsx",["77","78","79","80","81","82","83","84","85","86","87"],"import React, { useState, useRef,useEffect } from 'react';\nimport styled from 'styled-components';\nimport Clarifai from 'clarifai';\nimport axios from 'axios';\nimport Compress from 'compress.js';\nimport { reducerCases } from \"../utils/Constants\";\nimport { useStateProvider } from \"../utils/StateProvider\";\nimport './button.css';\nconst app = new Clarifai.App({\n  apiKey: '0d1678228b2740cc985509c91e4d34eab'\n});\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px 40px;\n`;\n\nconst Image = styled.img`\n  margin-top: 20px;\n  max-width: 300px;\n`;\n\nconst Mood = styled.h2`\n  margin-top: 20px;\n`;\n\nconst Video = styled.video`\n  display: none;\n`;\n\nconst Canvas = styled.canvas`\n  display: none;\n`;\n\n\nconst MoodDetection = () => {\n  \n   /**playlist change part start */\n   const [{ token, playlists ,selectedPlaylist,selectedPlaylistId}, dispatch] = useStateProvider();\n   const changeCurrentPlaylist = (selectedPlaylistId) => {\n     dispatch({ type: reducerCases.SET_PLAYLIST_ID, selectedPlaylistId });\n   };\n\n   useEffect(() => {\n    const getInitialPlaylist = async () => {\n      const response = await axios.get(\n        `https://api.spotify.com/v1/playlists/${selectedPlaylistId}`,\n        {\n          headers: {\n            Authorization: \"Bearer \" + token,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      const selectedPlaylist = {\n        id: response.data.id,\n        name: response.data.name,\n        description: response.data.description.startsWith(\"<a\")\n          ? \"\"\n          : response.data.description,\n        image: response.data.images[0].url,\n        tracks: response.data.tracks.items.map(({ track }) => ({\n          id: track.id,\n          name: track.name,\n          artists: track.artists.map((artist) => artist.name),\n          image: track.album.images[2].url,\n          duration: track.duration_ms,\n          album: track.album.name,\n          context_uri: track.album.uri,\n          track_number: track.track_number,\n        })),\n      };\n      dispatch({ type: reducerCases.SET_PLAYLIST, selectedPlaylist });\n    };\n    getInitialPlaylist();\n  }, [token, dispatch, selectedPlaylistId,selectedPlaylist]);\n   /**playlist change part end */\n\n   /**selecting a random song on that particular playlist start*/\n\n   const playTrack = async (\n    id,\n    name,\n    artists,\n    image,\n    context_uri,\n    track_number\n  ) => {\n    const response = await axios.put(\n      `https://api.spotify.com/v1/me/player/play`,\n      {\n        context_uri,\n        offset: {\n          position: track_number - 1,\n        },\n        position_ms: 0,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token,\n        },\n      }\n    );\n    if (response.status === 204) {\n      const currentPlaying = {\n        id,\n        name,\n        artists,\n        image,\n      };\n      dispatch({ type: reducerCases.SET_PLAYING, currentPlaying });\n      dispatch({ type: reducerCases.SET_PLAYER_STATE, playerState: true });\n    } else {\n      dispatch({ type: reducerCases.SET_PLAYER_STATE, playerState: true });\n    }\n  };\n   /**selecting a random song on that particular playlist end **/\n   \n   /**api call to detect mood start */\n\n   const [mood, setMood] = useState('');\n   const [isModelLoaded, setIsModelLoaded] = useState(false);\n   const videoRef = useRef(null);\n   const canvasRef = useRef(null);\n\n  const handleStart = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n    videoRef.current.srcObject = stream;\n  };\n\n  const handleStop = () => {\n    const stream = videoRef.current.srcObject;\n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n    }\n    videoRef.current.srcObject = null;\n\n    /**changing the the selected playlist*/\n       changeCurrentPlaylist('1u12mEkv7ejxpJVBizkh6Z');\n       console.log(selectedPlaylist);\n       console.log(selectedPlaylistId);\n       console.log(playlists);\n       //const playlis = playlists.find((playlis) => playlis.id === '41NHbQRs0HPjFwBAp7XEOW');\n       //console.log(\"lol\",playlis);\n    /**choosing a random song on that playlist */\n       const playlists = selectedPlaylist.tracks.map(({ id, name, artists, image, duration, album, context_uri, track_number }) => ({\n       id,\n       name,\n       artists,\n       image,\n       duration,\n       album,\n       context_uri,\n       track_number,\n       }));\n      const randomIndex = Math.floor(Math.random() * playlists.length);\n      const randomPlaylist = playlists[randomIndex];\n      console.log(playlists);\n      console.log(randomPlaylist);\n      playTrack(\n      randomPlaylist.id,\n      randomPlaylist.name,\n      randomPlaylist.artists,\n      randomPlaylist.image,\n      randomPlaylist.context_uri,\n      randomPlaylist.track_number\n      )\n    setMood('');\n  };\n\n  const handleCapture = async () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n  \n    // Compress image data\n    const compress = new Compress();\n    const blob = await fetch(canvas.toDataURL()).then((res) => res.blob());\n    const resizedImage = await compress.compress([blob], {\n      size: 4,\n      quality: 0.75,\n      maxWidth: 300,\n      maxHeight: 300,\n      resize: true,\n    });\n    const base64Image = resizedImage[0].data;\n    console.log(base64Image.length);\n    // Make API request to detect mood\n    try {\n      const response = await axios.post(`https://api.clarifai.com/v2/models/face-sentiment-recognition/versions/a5d7776f0c064a41b48c3ce039049f65/outputs`, {\n        \"user_app_id\": {\n          \"user_id\": \"clarifai\",\n          \"app_id\": \"main\"\n        },  \n        inputs: [\n          {\n            data: {\n              image: {\n                base64: base64Image\n              }\n            }\n          }\n        ]\n      }, {\n        headers: {\n          Authorization: 'Key ' + 'c58b98e1b7c2460da43f334a63575119',\n        },\n      });\n\n      // Parse response JSON\n      const emotions = response.data.outputs[0].data.concepts[0].name;\n      console.log(emotions);\n      setMood(emotions);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  /**api call to detect mood end */\n  return (\n    <Container>\n      <button class=\"button-85\" role=\"button\" onClick={handleStart}>Start Camera</button>\n      <button class=\"button-85\" role=\"button\" onClick={handleStop}>Stop Camera</button>\n      <button class=\"button-85\" role=\"button\" onClick={handleCapture}>Detect Mood</button>\n      <Video ref={videoRef} width={400} height={300} autoPlay />\n      <Canvas ref={canvasRef} width={4} height={3}/>\n      {mood && <h2>Detected Mood: {mood}</h2>}\n    </Container>\n  );\n};\n\nexport default MoodDetection;",{"ruleId":"88","severity":1,"message":"89","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":21},{"ruleId":"88","severity":1,"message":"92","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":13},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":28,"column":9,"nodeType":"99","endLine":28,"endColumn":72},{"ruleId":"88","severity":1,"message":"100","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":18},{"ruleId":"88","severity":1,"message":"101","line":9,"column":7,"nodeType":"90","messageId":"91","endLine":9,"endColumn":10},{"ruleId":"88","severity":1,"message":"102","line":22,"column":7,"nodeType":"90","messageId":"91","endLine":22,"endColumn":12},{"ruleId":"88","severity":1,"message":"103","line":27,"column":7,"nodeType":"90","messageId":"91","endLine":27,"endColumn":11},{"ruleId":"88","severity":1,"message":"104","line":43,"column":20,"nodeType":"90","messageId":"91","endLine":43,"endColumn":29},{"ruleId":"88","severity":1,"message":"105","line":127,"column":11,"nodeType":"90","messageId":"91","endLine":127,"endColumn":24},{"ruleId":"88","severity":1,"message":"106","line":127,"column":26,"nodeType":"90","messageId":"91","endLine":127,"endColumn":42},{"ruleId":"107","severity":1,"message":"108","line":148,"column":20,"nodeType":"90","messageId":"109","endLine":148,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":213,"column":33,"nodeType":"112","messageId":"113","endLine":213,"endColumn":34},{"ruleId":"97","severity":1,"message":"98","line":228,"column":7,"nodeType":"99","endLine":228,"endColumn":69},{"ruleId":"97","severity":1,"message":"98","line":229,"column":7,"nodeType":"99","endLine":229,"endColumn":68},{"ruleId":"97","severity":1,"message":"98","line":230,"column":7,"nodeType":"99","endLine":230,"endColumn":71},"no-unused-vars","'MoodDetection' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","'FaSearch' is defined but never used.","'app' is assigned a value but never used.","'Image' is assigned a value but never used.","'Mood' is assigned a value but never used.","'playlists' is assigned a value but never used.","'isModelLoaded' is assigned a value but never used.","'setIsModelLoaded' is assigned a value but never used.","no-use-before-define","'playlists' was used before it was defined.","usedBeforeDefined","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]